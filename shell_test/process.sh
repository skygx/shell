#!/bin/bash

# 声明一个数组变量ary  
declare -a ary  
  
# 初始化数组，为数组的每个元素（下标40到49）赋值为空格  
for i in `seq 40 49`  
do  
    ary[$i]=" "  # 数组下标从40到49的元素均赋值为一个空格  
  
    # 使用ANSI转义序列在终端的特定行上显示数组内容，模拟进度条效果  
    # \e[ 是转义字符的开始，$i 是行号，5m 表示设置文本闪烁，${ary[@]} 打印整个数组的内容  
    # \e[;0m 是转义字符的结束，用于重置之前的文本属性设置  
    echo -en "\e[$i;5m ${ary[@]}\e[;0m"  
done  
  
# 下面的代码是一个更复杂的例子，通过双层循环来模拟一个动态更新的进度条效果  
declare -a ary  
for s in `seq 1 2`  # 外层循环，用于控制进度条的更新次数  
do  
    for i in `seq 40 49`  # 内层循环，用于初始化或更新进度条  
    do  
        ary[$i]=" "  # 每次循环都重新为数组元素赋值空格，相当于清空进度条  
  
        # 与上面的echo命令类似，但这次是在双层循环中，因此会不断更新进度条的状态  
        echo -en "\e[$i;5m ${ary[@]}\e[;0m"  
    done  
done
